# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos1 import order_management_python_pb2 as protos1_dot_order__management__python__pb2


class OrderManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUnaryOrder = channel.unary_unary(
                '/order_management.OrderManagement/GetUnaryOrder',
                request_serializer=protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
                response_deserializer=protos1_dot_order__management__python__pb2.OrderResponse.FromString,
                )
        self.GetSSOrder = channel.unary_stream(
                '/order_management.OrderManagement/GetSSOrder',
                request_serializer=protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
                response_deserializer=protos1_dot_order__management__python__pb2.OrderResponse.FromString,
                )
        self.GetCSOrder = channel.stream_unary(
                '/order_management.OrderManagement/GetCSOrder',
                request_serializer=protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
                response_deserializer=protos1_dot_order__management__python__pb2.OrderResponse.FromString,
                )
        self.GetBothOrder = channel.stream_stream(
                '/order_management.OrderManagement/GetBothOrder',
                request_serializer=protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
                response_deserializer=protos1_dot_order__management__python__pb2.OrderResponse.FromString,
                )


class OrderManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUnaryOrder(self, request, context):
        """unary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSSOrder(self, request, context):
        """server streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCSOrder(self, request_iterator, context):
        """client streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBothOrder(self, request_iterator, context):
        """bidirectional
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUnaryOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnaryOrder,
                    request_deserializer=protos1_dot_order__management__python__pb2.OrderRequest.FromString,
                    response_serializer=protos1_dot_order__management__python__pb2.OrderResponse.SerializeToString,
            ),
            'GetSSOrder': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSSOrder,
                    request_deserializer=protos1_dot_order__management__python__pb2.OrderRequest.FromString,
                    response_serializer=protos1_dot_order__management__python__pb2.OrderResponse.SerializeToString,
            ),
            'GetCSOrder': grpc.stream_unary_rpc_method_handler(
                    servicer.GetCSOrder,
                    request_deserializer=protos1_dot_order__management__python__pb2.OrderRequest.FromString,
                    response_serializer=protos1_dot_order__management__python__pb2.OrderResponse.SerializeToString,
            ),
            'GetBothOrder': grpc.stream_stream_rpc_method_handler(
                    servicer.GetBothOrder,
                    request_deserializer=protos1_dot_order__management__python__pb2.OrderRequest.FromString,
                    response_serializer=protos1_dot_order__management__python__pb2.OrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'order_management.OrderManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUnaryOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order_management.OrderManagement/GetUnaryOrder',
            protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
            protos1_dot_order__management__python__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSSOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/order_management.OrderManagement/GetSSOrder',
            protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
            protos1_dot_order__management__python__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCSOrder(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/order_management.OrderManagement/GetCSOrder',
            protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
            protos1_dot_order__management__python__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBothOrder(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/order_management.OrderManagement/GetBothOrder',
            protos1_dot_order__management__python__pb2.OrderRequest.SerializeToString,
            protos1_dot_order__management__python__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
